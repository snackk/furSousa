os:
  - linux
services:
  - docker
language: node_js
node_js:
  - '16.17.0'
cache:
  directories:
    - node
    - node_modules
    - $HOME/.m2
env:
  global:
    - NODE_VERSION=16.17.0
    - JHI_JDK=11
    - SPRING_OUTPUT_ANSI_ENABLED=ALWAYS
    - SPRING_JPA_SHOW_SQL=false
    - JHI_DISABLE_WEBPACK_LOGS=true
    - NG_CLI_ANALYTICS="false"
    - MAVEN_USER_HOME=$HOME/.m2/repository/
    - CYPRESS_ENABLE_RECORD: false
before_install:
  - |
    if [[ $JHI_JDK = '17' ]]; then
      echo '*** Using OpenJDK 17'
      sudo add-apt-repository ppa:openjdk-r/ppa -y
      sudo apt-get update -q
      sudo apt-get install -y openjdk-17-jdk -y
      sudo update-java-alternatives -s java-1.17.0-openjdk-amd64
      java -version
    else
      echo '*** Using OpenJDK 11 by default'
      sudo apt-get update -q
      sudo apt-get install -y openjdk-11-jdk
      sudo update-java-alternatives -s java-1.11.0-openjdk-amd64
      java -version
    fi
  - java -version
  - sudo /etc/init.d/mysql stop
  - sudo /etc/init.d/postgresql stop
  - nvm install $NODE_VERSION
  - npm install -g npm
  - node -v
  - npm -v
install:
  - npm install
script:
  - chmod +x mvnw
  - npm run ci:backend:test
  - npm run ci:frontend:test
  - npm run java:jar:prod
  - npm run ci:e2e:package
  - npm run ci:e2e:prepare
  - npm run ci:e2e:run
  - npm run ci:e2e:teardown

notifications:
  webhooks:
    on_success: change # options: [always|never|change] default: always
    on_failure: always # options: [always|never|change] default: always
    on_start: false # default: false
